import csvimport osfrom datetime import datetimeimport pandas as pdfrom examples.conf import BASE_DIRMIAC_PATH = os.path.join(BASE_DIR, 'data', 'miac')class AddressParser:    def __init__(self, column_data, column_name):        self.column_data = column_data        self.column_name = column_name    def _apply(self, func):        """                :param func: function that has one string argument and returns string        :return:         """        self.column_data[self.column_name] = self.column_data[self.column_name].apply(func)    def replace_str(self, old_str, new_str=' '):        self._apply(lambda s: s.replace(old_str, new_str))    def strip(self):        self._apply(lambda s: ' '.join(s.split()))    def split_data(self):        self.strip()        self.replace_str(old_str='"', new_str='')        self.replace_str(old_str=',', new_str=';')        self.replace_str(old_str='пос. ', new_str='пос.')        self.replace_str(old_str='г.Санкт-Петербург', new_str='г.Санкт-Петербург;')    def save(self):        self.column_data.to_csv(os.path.join(MIAC_PATH, 'address-temp-{}.csv'.format(datetime.now())),                                index=False, quoting=csv.QUOTE_NONE, sep='*')if __name__ == '__main__':    data = pd.read_csv(os.path.join(MIAC_PATH, 'non-struct-original.csv'))    col_name = 'ADR_REG'    parser = AddressParser(column_data=data, column_name=col_name)    parser.split_data()    parser.save()